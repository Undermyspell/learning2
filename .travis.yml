os: linux
dist: xenial
language: node_js
node_js:
  - node
services:
  - docker

before_install:
  - wget -qO- https://toolbelt.heroku.com/install.sh | sh
  #- echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - echo "$HEROKU_PASSWORD" | docker login -u "$HEROKU_USERNAME" --password-stdin registry.heroku.com

stages:
  - Test
  - Build
  - Deploy
  
jobs:
  include:
    - stage: Test
      name: "Run tests on the Angular Frontend"
      script:
        - docker build -t $DOCKER_USERNAME/docker_frontend_dev --build-arg env=$FRONTEND_ENVIRONMENT -f ./angular/Dockerfile.Dev ./angular
        - docker tag $DOCKER_USERNAME/docker_frontend_dev registry.heroku.com/$HEROKU_APP_FRONTEND/web/dev
        - docker push registry.heroku.com/$HEROKU_APP_FRONTEND/web/dev
        - docker run --rm registry.heroku.com/$HEROKU_APP_FRONTEND/web/dev npm run test:ci
    - stage: Build               
      name: "Build Angular Frontend Docker image"           
      script: 
        - docker build -t $DOCKER_USERNAME/docker_frontend --build-arg env=$FRONTEND_ENVIRONMENT ./angular
        - docker tag $DOCKER_USERNAME/docker_frontend registry.heroku.com/$HEROKU_APP_FRONTEND/web
        - docker push registry.heroku.com/$HEROKU_APP_FRONTEND/web
    - stage: Build               
      name: "Build Docker NodeJS/Express Api Docker Image"           
      script: 
        - docker build -t $DOCKER_USERNAME/docker_backend ./nodejs-api
        - docker tag $DOCKER_USERNAME/docker_backend registry.heroku.com/$HEROKU_APP_BACKEND/web
        - docker push registry.heroku.com/$HEROKU_APP_BACKEND/web
    - stage: Build               
      name: "Build Nginx Proxy Server Docker Image"           
      script: 
        - docker build -t $DOCKER_USERNAME/docker_nginx ./nginx
        - docker tag $DOCKER_USERNAME/docker_nginx registry.heroku.com/$HEROKU_APP_NGINX/web; 
        - docker push registry.heroku.com/$HEROKU_APP_NGINX/web;
    - stage: Deploy
      if: branch = master
      name: "Deploy Docker containers on Heroku"
      script: 
        # no prompt to type username and password
        # because HEROKU_API_KEY is set as environment variable in Travis CI on branch obtained by heroku auth:token
        - heroku container:login
        - heroku container:release web --app $HEROKU_APP_FRONTEND
        - heroku container:release web --app $HEROKU_APP_BACKEND
        - heroku container:release web --app $HEROKU_APP_NGINX